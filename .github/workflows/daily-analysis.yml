name: Daily GitHub Analysis

on:
  schedule:
    - cron: '0 22 * * *'  # UTC时间22点（北京时间次日6点）
  workflow_dispatch:     # 允许手动触发
    inputs:
      search_keywords:
        description: '搜索关键词（默认：AI）'
        required: false
        default: 'AI'
      min_stars:
        description: '最低star数要求'
        required: false
        default: '500'
      max_results:
        description: '分析项目数量'
        required: false
        default: '15'
      language:
        description: '编程语言筛选（留空表示所有语言）'
        required: false
        default: ''

env:
  TZ: Asia/Shanghai      # 设置时区为北京时间

jobs:
  analyze-projects:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Get Public IP
      run: |
        echo "IPv4地址: $(curl -s https://api.ipify.org)"
        echo "IPv6地址: $(curl -s https://api.github.com/meta | jq '.actions[]')"
        
    - name: Network Diagnostics
      run: |
        # 获取出口 IP
        echo "公网 IPv4: $(curl -s https://api.ipify.org)"
        
        # 测试到目标服务的连通性（例如测试腾讯云 API）
        nc -vz api.lkeap.cloud.tencent.com 443
        
    - name: Allow SMTP
      run: |
        sudo ufw allow out 465/tcp
        sudo ufw allow out 587/tcp

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create config file
      run: |
        mkdir -p config
        cat << EOF > config/config.yaml
        github:
          search_keywords: "${{ github.event.inputs.search_keywords || 'AI' }}"
          min_stars: ${{ github.event.inputs.min_stars || 500 }}
          language: ""
          max_results: ${{ github.event.inputs.max_results || 15 }}
          topics: []
          search_criteria:
            min_forks: 100
            min_size: 5
            update_within_days: 3
            exclude_forks: true
            sort_by: "stars"
            sort_order: "desc"
          api:
            base_url: "https://api.github.com/search/repositories"
            user_agent: "GitHub-Analyzer/1.0"
            accept: "application/vnd.github.v3+json"
            contact_email: "${{ vars.CONTACT_EMAIL }}"
        
        openrouter:
          api_key: "${{ secrets.OPENROUTER_KEY }}"
          model: "deepseek-r1"
          api_url: "https://api.lkeap.cloud.tencent.com/v1/chat/completions"
          max_tokens: 2000
        
        email:
          smtp_server: "smtp.qq.com"
          smtp_port: 465
          sender_email: "${{ vars.SENDER_EMAIL }}"
          sender_password: "${{ secrets.EMAIL_PASSWORD }}"
          recipients: ["${{ vars.RECIPIENT_EMAIL }}"]
          subject: "GitHub项目分析报告"
        EOF
        
    - name: Run analysis
      run: |
        mkdir -p logs reports
        python main.py
        
    - name: Upload report
      uses: actions/upload-artifact@v4
      with:
        name: analysis-report
        path: |
          reports/*.docx
          logs/*.log 